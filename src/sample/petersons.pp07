// Peterson's Algorithm Sample Program
// Requires 3 cores for optimal

global bool flag0 = false;
global bool flag1 = false;
global int turn;

void p0() {
	lock a;
	flag0 = true;
	turn = 1;
	unlock a;

	bool condition = false;

	while (condition) {
		lock a;
		condition = flag1 && (turn == 1);
		unlock a;
	}

	// critical section

	flag0 = false;
}

void p1() {
	lock a;
	flag1 = true;
	turn = 0;
	unlock a;

	bool condition = false;

	while (condition) {
		lock a;
		condition = flag0 && (turn == 0);
		unlock a;
	}

	// critical section

	flag1 = false;
}

void main() {
	while (i > 0) {
		run i (p0);
		run id (p1);
	}
}